import{_ as i,X as p,Y as c,Z as n,a1 as a,$ as e,a2 as t,C as l}from"./framework-b6ea3384.js";const o="/assets/bgimg-1-5125be8a.png",d="/assets/bgimg-2-a1756133.png",r="/assets/bgimg-3-94197c48.png",u="/assets/box-shadow-98b7c625.png",v="/assets/box-wh-a2a10cac.png",k={},h={class:"hint-container info"},m=n("p",{class:"hint-container-title"},"源码连续地址",-1),b={href:"https://github.com/lojzes/css_mm_4e",target:"_blank",rel:"noopener noreferrer"},g=t(`<h2 id="伪类与伪元素" tabindex="-1"><a class="header-anchor" href="#伪类与伪元素" aria-hidden="true">#</a> 伪类与伪元素</h2><p>有时需要选择网页中不是由标签表示却易于标识的部分，例如段落的第一行，或 者鼠标悬停其上的链接。CSS为这种页面组成部分提供了少量选择符—伪类和伪元素。</p><h3 id="链接的样式" tabindex="-1"><a class="header-anchor" href="#链接的样式" aria-hidden="true">#</a> 链接的样式</h3><p>根据访客与链接的交互方式，链接有四种状态，这四种状态的外观可以使用四个伪类装饰。这些伪类分别对应下述四个状态：</p><p>a:link选取访客尚未访问，而且鼠标没有悬停其上，也没有正在单击的链接。这个选择符定义的样式是尚未单击的普通链接。</p><p>a:visited选取的是根据Web浏览器的历史判断已由访客单击的链接。我们可以使用不同于普通链接的外观装饰这种链接，告诉访客已经访问过这些链接了（这个选择符有些缺陷，参见第9章“限制可用属性”旁注）。</p><p>a:hover用于修改鼠标悬停其上的链接外观。这种变化效果不只是为了好玩，还可以让导航栏里的按钮有视觉反馈。</p><p>除了链接之外，其他元素也可以使用：hover伪类。例如，可以使用这个伪类突出显示＜p＞或＜div＞元素中访客悬停其上的文字。此时，选择符不是a：hover（这是链接专用的），而要定义名称为p：hover的样式，指明鼠标悬停在段落上时显示什么样的特殊效果。如果只想装饰类为highlight的标签，可以定义名为.highlight：hover的样式。</p><p>a:active用于设定访客点击链接时链接的外观。也就是访客按下鼠标按钮到松开之前那几纳秒。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">a:hover</span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="子代选择器" tabindex="-1"><a class="header-anchor" href="#子代选择器" aria-hidden="true">#</a> 子代选择器</h2><h3 id="first-child" tabindex="-1"><a class="header-anchor" href="#first-child" aria-hidden="true">#</a> first-child</h3><p>:first-child 伪类与指定的元素匹配：该元素是另一个元素的第一个子元素。</p><p>匹配首个 <code>&lt;p&gt; </code>元素</p><p>在下面的例子中，选择器匹配作为任何元素的第一个子元素的任何 <code>&lt;p&gt;</code> 元素：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>
<span class="token selector">p:first-child</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>包括所有后代</p><p>匹配所有首个 <code> &lt;p&gt;</code> 元素中的所有 <code>&lt;i&gt; </code>元素</p><p>在下面的例子中，选择器匹配作为另一个元素的第一个子元素的 <code>&lt;p&gt;</code> 元素中的所有 <code>&lt;i&gt; </code>元素： 实例</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p:first-child i</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例子</p><blockquote><p>注意： div 内没用内容时，如果父容器也没有宽高设置宽高会失效，此时要设置父容器宽高</p></blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">html , body</span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">#test div:first-child</span><span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 <span class="token selector">#test div:nth-of-type(2)</span><span class="token punctuation">{</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="before-after" tabindex="-1"><a class="header-anchor" href="#before-after" aria-hidden="true">#</a> before after</h3><p>在指定标签的内容前、后增加内容</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.pbefore::before</span><span class="token punctuation">{</span>
     <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;world &#39;</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pbefore<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>显示</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>hello world

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="selection-文本中的样式" tabindex="-1"><a class="header-anchor" href="#selection-文本中的样式" aria-hidden="true">#</a> selection 文本中的样式</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.ps::selection</span><span class="token punctuation">{</span>
   <span class="token property">color</span><span class="token punctuation">:</span>pink<span class="token punctuation">;</span>
   <span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ps<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="同辈选择器" tabindex="-1"><a class="header-anchor" href="#同辈选择器" aria-hidden="true">#</a> 同辈选择器</h3><p>选择与h2 同辈的p标签</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>h2+p
h2~p    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="target" tabindex="-1"><a class="header-anchor" href="#target" aria-hidden="true">#</a> target</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#targetTest</span> <span class="token punctuation">{</span>
   <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">#targetTest:target</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#targetTest<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击查看<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>targetTest<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        输入密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="not" tabindex="-1"><a class="header-anchor" href="#not" aria-hidden="true">#</a> not</h3><p>否定选择符 例如想选择没有 .classy 的元素</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>
<span class="token property">p</span><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span>.classy<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="样式继承" tabindex="-1"><a class="header-anchor" href="#样式继承" aria-hidden="true">#</a> 样式继承</h2><h2 id="重置样式" tabindex="-1"><a class="header-anchor" href="#重置样式" aria-hidden="true">#</a> 重置样式</h2><p>浏览器为各种标签提供了默认的样式，例如：＜h1＞标签的字号比＜h2＞标签大，而且都是粗体；段落里的文字要小一些，而且不是粗体；链接是蓝色的，有下划线；无序列表会向右缩进。HTML标准没有定义任何格式，Web浏览器提供这些格式是为了让基本的HTML更易于阅读。虽然不同的浏览器为各种标签提供的格式大体相似，但是具体实现各不相同。</p><p>注意</p><p>你不用自己动手输入这些代码，本书源码的05文件夹里有个名为reset．css的文件，里面是基本的CSS重置代码。把这个文件里的代码复制粘贴到你的样式表里即可。除此之外，还可以使用normalize.css重置样式。这是一个免费开源的样式表，能让相同的标签在不同的浏览器中具有一致的外观，在Web设计师圈子里使用广泛。normalize.css项目的网站地址是</p>`,49),x={href:"https://necolas.github.io/normalize.css/8.0.1/normalize.css",target:"_blank",rel:"noopener noreferrer"},f=t(`<h2 id="字体" tabindex="-1"><a class="header-anchor" href="#字体" aria-hidden="true">#</a> 字体</h2><h3 id="修改字号" tabindex="-1"><a class="header-anchor" href="#修改字号" aria-hidden="true">#</a> 修改字号</h3><blockquote><p>em</p></blockquote><p>关键字、百分比和em这三种设定字号的方式，其工作原理是在浏览器预设字号的基础上增大或减小。也就是说，如果样式表中没有设定字号， Web浏览器会使用预设的字号。在大多数浏览器中，非标题里的文本字号是16像素，这是基准字男 访客可以调整浏览器的设置，增大或减小基准字号。不过，修改基准字号要调整浏览器的偏好设置，很少有人会这么做</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">ol</span> <span class="token punctuation">{</span>
  <span class="token property">padding-left</span><span class="token punctuation">:</span> 1.4em<span class="token punctuation">;</span>
  <span class="token property">list-style</span><span class="token punctuation">:</span> decimal<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">ul</span> <span class="token punctuation">{</span>
  <span class="token property">padding-left</span><span class="token punctuation">:</span> 1.4em<span class="token punctuation">;</span>
  <span class="token property">list-style</span><span class="token punctuation">:</span> square<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 

 <span class="token selector">header h1</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span>

 <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字体介绍" tabindex="-1"><a class="header-anchor" href="#字体介绍" aria-hidden="true">#</a> 字体介绍</h3><p>常用字体格式 .ttf .otf</p><p>目前浏览器都支持的格式，体积更小的 woff</p><p>在线工具 可以把 .ttf .otf 的格式转换为 .woff</p><p>https://www.fontsquirrel.com/tools/font-generator</p><h3 id="使用字体" tabindex="-1"><a class="header-anchor" href="#使用字体" aria-hidden="true">#</a> 使用字体</h3><p>下载好字体，放在服务器上的 fonts 文件内</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>
<span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;3Dumb&#39;</span><span class="token punctuation">;</span>
    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;../fonts/3dumb/3Dumb.ttf&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">p</span> <span class="token punctuation">{</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;3Dumb&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文本倾斜、加粗、大小写、下划线" tabindex="-1"><a class="header-anchor" href="#文本倾斜、加粗、大小写、下划线" aria-hidden="true">#</a> 文本倾斜、加粗、大小写、下划线</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>
<span class="token selector">p</span><span class="token punctuation">{</span>
  //倾斜
<span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>

  //加粗
<span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>

<span class="token comment">/* uppercase 大写 lowercase 小写  capitalize 首字母大写*/</span>
<span class="token property">text-transform</span><span class="token punctuation">:</span> capitalize<span class="token punctuation">;</span>

<span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符间距、单词间距" tabindex="-1"><a class="header-anchor" href="#字符间距、单词间距" aria-hidden="true">#</a> 字符间距、单词间距</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>  <span class="token comment">/* 字符间距 */</span>
 <span class="token property">letter-spacing</span><span class="token punctuation">:</span> .15rem<span class="token punctuation">;</span>
   <span class="token comment">/* 单词间距 */</span>
  <span class="token property">word-spacing</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文本投影" tabindex="-1"><a class="header-anchor" href="#文本投影" aria-hidden="true">#</a> 文本投影</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">.study</span> <span class="token punctuation">{</span>
  <span class="token comment">/*
  第一个值： 阴影在文本左边的距离（负值在右边）
  第二个值：阴影在文本下边的距离（负值在上边）
  第三个值：阴影的模糊度 值越大越模糊 0px 不模糊
  第四个值：阴影的颜色

  也可以设置多个阴影 用，隔开

  */</span>
   <span class="token property">text-shadow</span><span class="token punctuation">:</span> 2px 3px 1px yellow<span class="token punctuation">,</span>2px 3px 1px red<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修饰整个段落" tabindex="-1"><a class="header-anchor" href="#修饰整个段落" aria-hidden="true">#</a> 修饰整个段落</h2><h3 id="行间距" tabindex="-1"><a class="header-anchor" href="#行间距" aria-hidden="true">#</a> 行间距</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 行间距会随着font-size进行调节 */</span>
 <span class="token selector">.study</span> <span class="token punctuation">{</span>
        <span class="token property">line-height</span><span class="token punctuation">:</span> .80rem<span class="token punctuation">;</span>
       或者：
        <span class="token property">line-height</span><span class="token punctuation">:</span> 40%<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="对齐文本" tabindex="-1"><a class="header-anchor" href="#对齐文本" aria-hidden="true">#</a> 对齐文本</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token comment">/* left right center  justify 两端对齐*/</span>
 <span class="token property">text-align</span><span class="token punctuation">:</span> justify<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="首行缩进" tabindex="-1"><a class="header-anchor" href="#首行缩进" aria-hidden="true">#</a> 首行缩进</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">.pcontent</span><span class="token punctuation">{</span>
        <span class="token property">text-indent</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

  <span class="token comment">/* 第一个字符显示2rem字体大小 */</span>
  <span class="token selector">.pcontent::first-letter</span><span class="token punctuation">{</span>
       <span class="token property">font-size</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="图片" tabindex="-1"><a class="header-anchor" href="#图片" aria-hidden="true">#</a> 图片</h2><h3 id="img" tabindex="-1"><a class="header-anchor" href="#img" aria-hidden="true">#</a> img</h3><p>可以对img 设置 边框border ,padding,margin, float , 圆角</p><div class="hint-container info"><p class="hint-container-title">提示</p><p>把border-radius属性的值设为50%能把图像变成圆形。例如，可以编写一个类样式，如.round，然后把它应用到想显示为圆形的图像上:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><h3 id="背景图-background-image" tabindex="-1"><a class="header-anchor" href="#背景图-background-image" aria-hidden="true">#</a> 背景图 background-image</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">body</span> <span class="token punctuation">{</span>
  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../images/bg.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>

<span class="token comment">/* 相对于根目录 */</span>
    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/root/sss/images/bg.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="控制平铺方式" tabindex="-1"><a class="header-anchor" href="#控制平铺方式" aria-hidden="true">#</a> 控制平铺方式</h3><p>如果只使用background-image属性，图形会铺满网页的整个背景。使用background-repeat属性指定是否平铺图像， 以及平铺的方式:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个属性有四个可选值:</p><ul><li>repeat，repeat是背景图的常规设置，指明从左到右、从上到下把图形铺满整个背景(见图8-3)。</li><li>no-repeat，no-repeat指明只显示图像一次，不平铺。这个选项特别常用，经常用于设置<code>&lt;body&gt;</code>标签之外的其他标签的背景图平铺方式。我们可以使用这个选项把徽标放在页面的上角，或者定制列表的项目符号(本章后面“在无序列表中使用图形”一节的教程会举例说明如何定制项目符号)。</li><li>repeat-x 指明沿着X轴横向平铺图像 (如果你几何学得不好，我告诉你，就是页面的横向宽度) 。这个选项特别适合用于在页面顶部添加图形横幅 (如图8-4的左边)，或者装饰标题的上下边框。</li><li>repeat-y 指明沿着Y轴纵向平铺图像 (即页面的纵向高度) 。我们可以使用这个选项为页面中的侧边栏添加背景图 (如图8-4的右边) ，或者在页面中某个元素 (如侧边栏) 的某一边平铺投影</li><li>round平铺图像的方式与repeat一样，不过不会裁剪图像。背景图不会被裁剪，而是被缩放，并排着一列列显示 (如图8-5的左边) 。为了做到这一点，浏览器会扭曲各个图像副本，因此会破坏图像的纵横比。</li><li>space平铺图像的方式与repeat一样，但是不会裁剪图像的上部或下部。也就是说，space选项始终显示完整的图像。因此，浏览器会在平铺的各个图像副本之间添加间隙 (如图8-5的右边)</li></ul><h2 id="定位背景图" tabindex="-1"><a class="header-anchor" href="#定位背景图" aria-hidden="true">#</a> 定位背景图</h2><h3 id="使用关键字" tabindex="-1"><a class="header-anchor" href="#使用关键字" aria-hidden="true">#</a> 使用关键字</h3><p>关键字分为两类，一类控制横向位置，可用的值有三个:left，center和right; 另一类控制纵向位置，可用的值有三个: top，center和bottom (见图8-6) 。假如想把图形放在网页的中部，可以编写下述样式</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">body</span> <span class="token punctuation">{</span>
<span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>bg page.jpg<span class="token punctuation">)</span></span><span class="token punctuation">;</span>
<span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>
<span class="token property">background-position</span><span class="token punctuation">:</span> center center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+o+'" alt="" loading="lazy"></p><h3 id="精确的位置" tabindex="-1"><a class="header-anchor" href="#精确的位置" aria-hidden="true">#</a> 精确的位置</h3><p><img src="'+d+`" alt="" loading="lazy"></p><h3 id="固定背景图" tabindex="-1"><a class="header-anchor" href="#固定背景图" aria-hidden="true">#</a> 固定背景图</h3><p>一般情况下，如果网页有背景图，而且访客必须向下拉滚动条才能看到更多内容，那么背景图会随之一起滚动。因此，背景图会随着页面中的文字一起移动。此外，如果背景图没有平铺，滚动时可能会移出视野。如果是网站的徽标或者页面背景中的水印图形，可能不想让它在访客滚动页面时消失不见。 CSS为这种问题提供了解决方法 background-attachment属性。 这个属性有两个选项:scroll和fixed。Web浏览器默认使用scroll，即背景图与文本和页面中的其他内容一起滚动。而fixed的作用是把背景图固定在某个位置 (见图8-10)所以，如果想在网页的左上角放公司的徽标，而且访客滚动页面时徽标的位置不变，可以编写下述样式:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>body <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>images/logo.gif<span class="token punctuation">)</span></span><span class="token punctuation">;</span>
<span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>
<span class="token property">background-attachment</span><span class="token punctuation">:</span> <span class="token property">fixed</span><span class="token punctuation">:</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>平铺的背景图也可以使用fixed选项。此时，滚动页面后，文字会消失在顶部，而背景图不会移动，页面的内容像是浮在背景之上。</p><h2 id="定义背景的起点位置和显示区域" tabindex="-1"><a class="header-anchor" href="#定义背景的起点位置和显示区域" aria-hidden="true">#</a> 定义背景的起点位置和显示区域</h2><p>// todo</p><h2 id="缩放背景图" tabindex="-1"><a class="header-anchor" href="#缩放背景图" aria-hidden="true">#</a> 缩放背景图</h2><p>通常情况下，元素的背景图尺寸与原图一样。不过，background-size属性可以控制背景图的尺寸。背景图的尺寸可以使用数值或关键字设置: 提供高度和宽度，设定背景图的尺寸。数值可以是绝对值，例如像素值:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">background-size</span><span class="token punctuation">:</span> 100px 200px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个声明把背景图的宽度设为100像素，高度设为200像素。还可以只设置宽度或高度，把另一个值设为auto:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">background-size</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时，背景图的宽度是100像素，浏览器会根据图像的纵横比自动设置高度(因此不会扭曲)。此外，还可以使用百分比值。如果想让图片填满整个背景，可以把两个值都设为100% (如图8-12的左边) :</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">background-size</span><span class="token punctuation">:</span> 100% 100%<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>contain关键字会根据元素的背景尺寸强制调整图像的尺寸，而且会保留图像的纵横比 (如图8-12中间) 。根据图像和元素的形状不同，浏览器会拉伸图像适应元素的宽度或高度</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">background-size</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>cover关键字强制让图像的宽度适应元素的宽度，让图像的高度适应元素的高度，而且不破坏图像的纵横比 (如图8-12右边)。</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最终，background-size属性基本上总会改变图像的原来尺寸。如果图像比元素小，浏览器会放大图像;通常，这都会导致图像明显像素化，品质下降 (如图8-12右边的背景图)</p><p><img src="`+r+`" alt="" loading="lazy"></p><h2 id="使用渐变背景" tabindex="-1"><a class="header-anchor" href="#使用渐变背景" aria-hidden="true">#</a> 使用渐变背景</h2><h3 id="线性渐变" tabindex="-1"><a class="header-anchor" href="#线性渐变" aria-hidden="true">#</a> 线性渐变</h3><h2 id="内边距、外边距和边框" tabindex="-1"><a class="header-anchor" href="#内边距、外边距和边框" aria-hidden="true">#</a> 内边距、外边距和边框</h2><h3 id="内外间距冲突" tabindex="-1"><a class="header-anchor" href="#内外间距冲突" aria-hidden="true">#</a> 内外间距冲突</h3><p>在CSS中，2加2并不总等于4。如果一个元素的下外边距触及另一个元素的上外边距，会遇到一些怪异的数学问题。Web浏览器不会把这两个外边距加在一起，而是取较大的一个 (如图7-3上部) 。假设有个无序列表的下外边距是30像素，这个列表后面有个段落，段落的上外边距是20像素。那么，Web浏览器在二者之间添加空白时不会把两个值相加得到50像素，而且取较大的外边距，在此例中是30像素。如果不希望出现这种情况，要使用上下内边距</p><p>注意 横向的外边距和两个浮动元素之间的外边距不会像这样折叠。绝对定位和相对定位的元素也不会折叠外边距。</p><h2 id="行内、块级、其他显示方式" tabindex="-1"><a class="header-anchor" href="#行内、块级、其他显示方式" aria-hidden="true">#</a> 行内、块级、其他显示方式</h2><p>两种盒子，都能设置颜色、字体、边框，但是设计内外边距时，有区分</p><p>行内元素，只能设置左右内外边距，上下不行</p><p>注意 为行内元素设定内外边距不会导致元素变高，这条规则有个例外一img&gt;标签 (虽然这是行内标签)。Web浏览器会根据设定的内外边距相应地增加图像盒子的高度。</p><h3 id="行内" tabindex="-1"><a class="header-anchor" href="#行内" aria-hidden="true">#</a> 行内</h3><p>都在一行</p><p>img a em strong</p><h3 id="块级" tabindex="-1"><a class="header-anchor" href="#块级" aria-hidden="true">#</a> 块级</h3><p>块级盒子前后都有行</p><p>p div h1- table 列表 列表项目</p><h3 id="行内、块级元素转换" tabindex="-1"><a class="header-anchor" href="#行内、块级元素转换" aria-hidden="true">#</a> 行内、块级元素转换</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 块级转行内 */</span>
<span class="token property">display</span><span class="token punctuation">:</span>inline<span class="token punctuation">;</span>  
<span class="token comment">/* 行内转块级 */</span>
<span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>  

<span class="token comment">/* 即像会级又像行内 */</span>
<span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="边框设置圆角" tabindex="-1"><a class="header-anchor" href="#边框设置圆角" aria-hidden="true">#</a> 边框设置圆角</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>

<span class="token comment">/* 画yuan */</span>

 <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
 <span class="token property">border-radius</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="边框阴影" tabindex="-1"><a class="header-anchor" href="#边框阴影" aria-hidden="true">#</a> 边框阴影</h3><p>box-shadow属性的基本句法如图7-11所示。第一个值是横向偏移，向元素的右边或左边投影。正值投向右边 (如图7-10的上部) ，负值投向左边。 第二个值是纵向偏移，向元素的上边或下边投影。正值投向盒子的下边 (如图7-10的上部)，负值投向盒子的上边。 注意 投影的偏移值只能使用px或em为单位，不能使用百分比。 第三个值是投影的半径，决定投影的模糊度和宽度。设为0表示不模糊，因此投影的边缘清晰可见。值越大投影越模糊，也越宽。最后一个值是投影的颜色，可以使用CSS支持的任何颜色值，不过RGBA效果特别好，因为可以控制颜色的不透明度，能实现半透明效果，看起来更像是投影。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token property">box-shadow</span><span class="token punctuation">:</span> 4px 6px 8px chocolate<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+u+`" alt="" loading="lazy"></p><h2 id="宽高" tabindex="-1"><a class="header-anchor" href="#宽高" aria-hidden="true">#</a> 宽高</h2><h3 id="盒子内容宽高" tabindex="-1"><a class="header-anchor" href="#盒子内容宽高" aria-hidden="true">#</a> 盒子内容宽高</h3><p>width: height:</p><p>分别表示盒子内容的宽高</p><h3 id="盒子真实宽高" tabindex="-1"><a class="header-anchor" href="#盒子真实宽高" aria-hidden="true">#</a> 盒子真实宽高</h3><p>假如我们设定了如下属性:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>
<span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
<span class="token property">border-width</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
<span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只要设定了width属性，我们就知道内容 (词语和图像占据的空间) 的宽度，而不用考虑其他属性。我们不用做任何数学计算，因为width属性的值就是内容区域的宽度 (在此例中，宽度是100像素)。不过，如果想知道元素在网页中到底占据多大空间，必须要做些数学计算。对上述示例来说，Web浏览器为目标盒子分配的宽度是160像素:左右外边距20像素，左右边框10像素，左右内边距30像素，宽度100像素</p><p><img src="`+v+`" alt="" loading="lazy"></p><h3 id="重新定义盒子宽高" tabindex="-1"><a class="header-anchor" href="#重新定义盒子宽高" aria-hidden="true">#</a> 重新定义盒子宽高</h3><div class="language-csss line-numbers-mode" data-ext="csss"><pre class="language-csss"><code>
box-sizing

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>content-box: 这个选项就是本章前面“计算盒子的真实宽度和高度”一节所述，浏览器计算元素宽度和高度的常规方式。即，浏览器把边框的宽度和内边距的大小加到所设的宽度和高度上，以此确定元素在屏幕中所占的宽度和高度。既然这是默认的行为，如果想使用content-box选项，不用指定任何值。</p><p>padding-box:这个选项告诉浏览器，width和height属性的值包括内边距比如说我们把元素的左右外边距都设为20像素，把元素的宽度设为100像素，那么浏览器会把内边距的值包含在100像素内。也就是说，内容区域的宽度是60像素 (100-20[左内边距]- 20[右内边距])。</p><p>border-box:内边距和边框的宽度都包含在width和height属性的值里。这个选项能解决前面使用百分比值遇到的问题。例如，把box-sizing属性设为border-box时，如果把某个元素的宽度设为50%，那个元素就会占据50%的宽度，即便为那个元素添加内边距和边框仍是这么宽</p><h3 id="使用overflow-控制溢出部分" tabindex="-1"><a class="header-anchor" href="#使用overflow-控制溢出部分" aria-hidden="true">#</a> 使用overflow 控制溢出部分</h3><p>如果目标标签里的内容超出样式中定义的宽度和高度，会发生一些怪事。如图7-13所示，浏览器会让内容从盒子中溢出 (超出边界，经常会叠加在其他内容之T 幸好，我们可以使用overflow属性告诉浏览器遇到这种情况时怎么做。overflow属性有四个关键字可用，指定如何显示超出盒子边界的内容: visible: 这个选项是浏览器一般的处理方式。等同于不设定这个属性</p><p>scroll: 添加滚动条 (如图7-14的中间) 。这个选项会在页面中创建一种小型的浏览器窗口，看起来像是老式的HTML框架 (<code>&lt;iframe&gt;</code>标签)。设为scroll，一小块地方能显示大量内容。可惜，使用这个选项时滚动条始终显示，即便盒子能放得下内容也显示。</p><p>auto: 如果想在需要时才显示滚动条，应该使用auto选项。这个选项的作用与scroll类似，不过只在需要时才显示滚动条。</p><p>hidden:隐藏超出盒子边界的内容 (如图7-14的下部) 。这个选项有点危险，可能导致某些内容不在网页中显示。</p><h3 id="最大最小宽度高度" tabindex="-1"><a class="header-anchor" href="#最大最小宽度高度" aria-hidden="true">#</a> 最大最小宽度高度</h3>`,107);function y(_,w){const s=l("ExternalLinkIcon");return p(),c("div",null,[n("div",h,[m,n("p",null,[n("a",b,[a("https://github.com/lojzes/css_mm_4e"),e(s)])])]),g,n("p",null,[n("a",x,[a("https://necolas.github.io/normalize.css/8.0.1/normalize.css"),e(s)])]),f])}const z=i(k,[["render",y],["__file","css基础.html.vue"]]);export{z as default};
