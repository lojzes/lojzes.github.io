import{_ as s,X as n,Y as a,a2 as t}from"./framework-0b23a550.js";const e="/assets/1-24c371a1.png",p="/assets/2-4914966f.png",c="/assets/3-c5c2ff41.png",o="/assets/4-80e683d8.png",i="/assets/5-3cd6e62e.png",l="/assets/6-07d7e177.png",r={},u=t('<div class="hint-container tip"><p class="hint-container-title">参考</p></div><h2 id="ascii-字符集-和-ascii编码" tabindex="-1"><a class="header-anchor" href="#ascii-字符集-和-ascii编码" aria-hidden="true">#</a> ASCII 字符集 和 ASCII编码</h2><p><img src="'+e+'" alt="" loading="lazy"></p><p><img src="'+p+'" alt="" loading="lazy"></p><p>美国人把自己使用的所有字符编成<u> ASCII 字符集</u>，从0 ~ 127 (<u>称ASCII 码</u>)一共128个字符，然后把这128的字符，以<u>二进制</u>的方式（<u>以一个字节方式</u>）存在的计算机中， 二进制的开头是以 <u>0</u> 开头。</p><h2 id="gbk-字符集-和gbk-编码" tabindex="-1"><a class="header-anchor" href="#gbk-字符集-和gbk-编码" aria-hidden="true">#</a> GBK 字符集 和GBK 编码</h2><p><img src="'+c+'" alt="" loading="lazy"></p><p>GKB 字符集是对 ASCII 的扩充，兼容了 ASCII ,一共存储了2万多汉字字，一个汉字占2个字节，用二进制表示式，二进制是以1 开头，以1开头的二进制是 负数。</p><p>2个字节一个能存 2<sup>15</sup> = 32786 个汉字</p><h2 id="uicode-字符集-和unicode-编码-utf-8" tabindex="-1"><a class="header-anchor" href="#uicode-字符集-和unicode-编码-utf-8" aria-hidden="true">#</a> Uicode 字符集 和Unicode 编码（UTF-8）</h2><p><img src="'+o+'" alt="" loading="lazy"></p><p>每个国家都有自己的字符集，比较乱，所有国际组织提出了 Unicode 字符集，来统一管理全世界的字符，最终使用的是 UTF-8 可变长的编码方式。 即 英文 占一个字符 ，汉字占 3 个字节，存储在计算机中。</p><p><img src="'+i+'" alt="" loading="lazy"></p><p><img src="'+l+`" alt="" loading="lazy"></p><h2 id="java-字符集编码解码" tabindex="-1"><a class="header-anchor" href="#java-字符集编码解码" aria-hidden="true">#</a> java 字符集编码解码</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;a好b&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 默认平台编码</span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strBytes <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查看字节数组</span>
<span class="token operator">/</span> <span class="token operator">/</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>strBytes<span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">97</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">27</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">91</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">]</span>
<span class="token comment">// 默认平台解码</span>
<span class="token class-name">String</span>  s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>strBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 自定字符集解码</span>
<span class="token class-name">String</span>  s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>strBytes<span class="token punctuation">,</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),d=[u];function k(m,v){return n(),a("div",null,d)}const h=s(r,[["render",k],["__file","charset.html.vue"]]);export{h as default};
