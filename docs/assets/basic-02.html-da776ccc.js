const e=JSON.parse('{"key":"v-21e5a11e","path":"/interview/java/basic/basic-02.html","title":"面试题总结中","lang":"zh-CN","frontmatter":{"title":"面试题总结中","icon":"markdown","category":["面试"],"description":"面向对象基础 面向对象和面向过程的区别 两者的主要区别在于解决问题的方式不同： 面向过程把解决问题的过程拆成一个个方法，通过一个个方法的执行解决问题。 面向对象会先抽象出对象，然后用对象执行方法的方式解决问题。 另外，面向对象开发的程序一般更易维护、易复用、易扩展。 对象的相等和引用相等的区别 对象的相等一般比较的是内存中存放的内容是否相等。 引用相等一般比较的是他们指向的内存地址是否相等。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/interview/java/basic/basic-02.html"}],["meta",{"property":"og:site_name","content":"JavaNative"}],["meta",{"property":"og:title","content":"面试题总结中"}],["meta",{"property":"og:description","content":"面向对象基础 面向对象和面向过程的区别 两者的主要区别在于解决问题的方式不同： 面向过程把解决问题的过程拆成一个个方法，通过一个个方法的执行解决问题。 面向对象会先抽象出对象，然后用对象执行方法的方式解决问题。 另外，面向对象开发的程序一般更易维护、易复用、易扩展。 对象的相等和引用相等的区别 对象的相等一般比较的是内存中存放的内容是否相等。 引用相等一般比较的是他们指向的内存地址是否相等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"面试题总结中"}],["meta",{"property":"article:author","content":"lojzes"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"面试题总结中\\",\\"image\\":[\\"https://vuepress-theme-hope-docs-demo.netlify.app/\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lojzes\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"面向对象基础","slug":"面向对象基础","link":"#面向对象基础","children":[{"level":3,"title":"面向对象和面向过程的区别","slug":"面向对象和面向过程的区别","link":"#面向对象和面向过程的区别","children":[]},{"level":3,"title":"对象的相等和引用相等的区别","slug":"对象的相等和引用相等的区别","link":"#对象的相等和引用相等的区别","children":[]},{"level":3,"title":"类的构造方法的作用是什么?","slug":"类的构造方法的作用是什么","link":"#类的构造方法的作用是什么","children":[]},{"level":3,"title":"如果一个类没有声明构造方法，该程序能正确执行吗?","slug":"如果一个类没有声明构造方法-该程序能正确执行吗","link":"#如果一个类没有声明构造方法-该程序能正确执行吗","children":[]},{"level":3,"title":"构造方法有哪些特点？是否可被 override?","slug":"构造方法有哪些特点-是否可被-override","link":"#构造方法有哪些特点-是否可被-override","children":[]}]},{"level":2,"title":"面向对象三大特征","slug":"面向对象三大特征","link":"#面向对象三大特征","children":[{"level":3,"title":"封装","slug":"封装","link":"#封装","children":[]},{"level":3,"title":"继承","slug":"继承","link":"#继承","children":[]},{"level":3,"title":"多态","slug":"多态","link":"#多态","children":[]},{"level":3,"title":"接口和抽象类有什么共同点和区别？","slug":"接口和抽象类有什么共同点和区别","link":"#接口和抽象类有什么共同点和区别","children":[]},{"level":3,"title":"深拷贝和浅拷贝区别了解吗？什么是引用拷贝？","slug":"深拷贝和浅拷贝区别了解吗-什么是引用拷贝","link":"#深拷贝和浅拷贝区别了解吗-什么是引用拷贝","children":[]}]},{"level":2,"title":"Java 常见类","slug":"java-常见类","link":"#java-常见类","children":[{"level":3,"title":"Object","slug":"object","link":"#object","children":[]},{"level":3,"title":"== 和 equals() 的区别","slug":"和-equals-的区别","link":"#和-equals-的区别","children":[]},{"level":3,"title":"hashCode() 有什么用？","slug":"hashcode-有什么用","link":"#hashcode-有什么用","children":[]},{"level":3,"title":"为什么要有 hashCode？","slug":"为什么要有-hashcode","link":"#为什么要有-hashcode","children":[]},{"level":3,"title":"为什么重写 equals() 时必须重写 hashCode() 方法？","slug":"为什么重写-equals-时必须重写-hashcode-方法","link":"#为什么重写-equals-时必须重写-hashcode-方法","children":[]}]},{"level":2,"title":"String","slug":"string","link":"#string","children":[{"level":3,"title":"String、StringBuffer、StringBuilder 的区别？","slug":"string、stringbuffer、stringbuilder-的区别","link":"#string、stringbuffer、stringbuilder-的区别","children":[]},{"level":3,"title":"String 为什么是不可变的?","slug":"string-为什么是不可变的","link":"#string-为什么是不可变的","children":[]},{"level":3,"title":"字符串拼接用“+” 还是 StringBuilder?","slug":"字符串拼接用-还是-stringbuilder","link":"#字符串拼接用-还是-stringbuilder","children":[]},{"level":3,"title":"String#equals() 和 Object#equals() 有何区别？","slug":"string-equals-和-object-equals-有何区别","link":"#string-equals-和-object-equals-有何区别","children":[]},{"level":3,"title":"字符串常量池的作用了解吗？","slug":"字符串常量池的作用了解吗","link":"#字符串常量池的作用了解吗","children":[]},{"level":3,"title":"String s1 = new String(\\"abc\\");这句话创建了几个字符串对象？","slug":"string-s1-new-string-abc-这句话创建了几个字符串对象","link":"#string-s1-new-string-abc-这句话创建了几个字符串对象","children":[]},{"level":3,"title":"intern 方法有什么作用?","slug":"intern-方法有什么作用","link":"#intern-方法有什么作用","children":[]}]}],"readingTime":{"minutes":21.86,"words":6558},"filePathRelative":"interview/java/basic/basic-02.md","excerpt":"<h2> 面向对象基础</h2>\\n<h3> 面向对象和面向过程的区别</h3>\\n<p>两者的主要区别在于解决问题的方式不同：</p>\\n<ul>\\n<li>面向过程把解决问题的过程拆成一个个方法，通过一个个方法的执行解决问题。</li>\\n<li>面向对象会先抽象出对象，然后用对象执行方法的方式解决问题。</li>\\n</ul>\\n<p>另外，面向对象开发的程序一般更易维护、易复用、易扩展。</p>\\n<h3> 对象的相等和引用相等的区别</h3>\\n<ul>\\n<li>对象的相等一般比较的是内存中存放的内容是否相等。</li>\\n<li>引用相等一般比较的是他们指向的内存地址是否相等。</li>\\n</ul>\\n","copyright":{"author":"lojzes","license":"MIT"},"autoDesc":true,"git":{}}');export{e as data};
