import{_ as e,X as o,Y as i,a2 as t}from"./framework-b6ea3384.js";const a="/assets/js-1-a19b93e1.png",l={},c=t('<p>BOM(Browser Obiect Model，浏览器对象模型)主要用于管理浏览器窗口，提供了独立的、可以与浏览器窗口进行互动的功能，这些功能与任何网页内容无关。BOM 由多个对象组成，其中代表浏览器窗口的 window对象是 BOM的顶层对象，其他对象都是该对象的子对象。BOM 缺乏标准，至今还没有组织对其进行标准化。由于 BOM 广泛应用于 Web 开发之中，各主流浏览器均支持 BOM，已经成为事实上的标准。W3C 为了把浏览器中 JavaScript最基本的部分标准化，已经将BOM的主要方面纳入了 HTMI5 的规范中。</p><p>通过window对象可以访问浏览器窗口,同时与浏览器相关的其他客户端对象都是 window的子对象通过 window 属性进行引用。客户端各个对象之间存在一种结构关系，这种关系构成浏览器对象模型，window 对象代表根节点，如图 16.1 所示。 浏览器对象简单说明如下:</p><ul><li>window:客户端JavaScript 中的顶层对象。每当<code>&lt;body&gt;</code>或<code>&lt;frameset&gt;</code>标签出现时，window 对象就会被自动创建。</li><li>navigator :包含客户端有关浏览器的信息</li><li>screen: 包含客户端显示屏的信息。</li></ul><p>包含浏览器窗口访问过的 URL 信息。history:</p><ul><li>location:包含当前网页文档的 URL 信息。</li><li>document : 包含整个 HTML 文档，可被用来访问文档内容，及其所有页面元素</li></ul><h2 id="浏览器对象模型" tabindex="-1"><a class="header-anchor" href="#浏览器对象模型" aria-hidden="true">#</a> 浏览器对象模型</h2><p><img src="'+a+'" alt="" loading="lazy"></p>',7),n=[c];function s(d,r){return o(),i("div",null,n)}const p=e(l,[["render",s],["__file","js-bom.html.vue"]]);export{p as default};
