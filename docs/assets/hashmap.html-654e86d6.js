const e=JSON.parse('{"key":"v-22521eb7","path":"/interview/java/basic/emphasis/hashmap.html","title":"hashmap","lang":"zh-CN","frontmatter":{"title":"hashmap","icon":"creative","category":["面试"],"description":"参考 https://juejin.cn/post/6844904013909983245 类层次结构 不管是1.7，还是1.8，HashMap的实现框架都是哈希表 + 链表的组合方式。结构图如下：","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/interview/java/basic/emphasis/hashmap.html"}],["meta",{"property":"og:site_name","content":"JavaNative"}],["meta",{"property":"og:title","content":"hashmap"}],["meta",{"property":"og:description","content":"参考 https://juejin.cn/post/6844904013909983245 类层次结构 不管是1.7，还是1.8，HashMap的实现框架都是哈希表 + 链表的组合方式。结构图如下："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"hashmap"}],["meta",{"property":"article:author","content":"lojzes"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"hashmap\\",\\"image\\":[\\"https://vuepress-theme-hope-docs-demo.netlify.app/\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lojzes\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"类层次结构","slug":"类层次结构","link":"#类层次结构","children":[]},{"level":2,"title":"put()方法","slug":"put-方法","link":"#put-方法","children":[]},{"level":2,"title":"扩容","slug":"扩容","link":"#扩容","children":[{"level":3,"title":"如何计算bucket下标？","slug":"如何计算bucket下标","link":"#如何计算bucket下标","children":[]},{"level":3,"title":"1️⃣ hash值的计算","slug":"hash值的计算","link":"#hash值的计算","children":[]},{"level":3,"title":"2️⃣ 取模的逻辑","slug":"取模的逻辑","link":"#取模的逻辑","children":[]},{"level":3,"title":"在目标bucket中遍历Entry结点","slug":"在目标bucket中遍历entry结点","link":"#在目标bucket中遍历entry结点","children":[]},{"level":3,"title":"get()方法","slug":"get-方法","link":"#get-方法","children":[]}]},{"level":2,"title":"JDK8中的HashMap底层实现","slug":"jdk8中的hashmap底层实现","link":"#jdk8中的hashmap底层实现","children":[{"level":3,"title":"put()操作","slug":"put-操作","link":"#put-操作","children":[]},{"level":3,"title":"扩容操作","slug":"扩容操作","link":"#扩容操作","children":[]},{"level":3,"title":"get()操作","slug":"get-操作","link":"#get-操作","children":[]}]},{"level":2,"title":"HashMap线程不安全在哪？","slug":"hashmap线程不安全在哪","link":"#hashmap线程不安全在哪","children":[{"level":3,"title":"数据覆盖问题","slug":"数据覆盖问题","link":"#数据覆盖问题","children":[]},{"level":3,"title":"扩容时导致死循环","slug":"扩容时导致死循环","link":"#扩容时导致死循环","children":[]}]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"readingTime":{"minutes":8.94,"words":2681},"filePathRelative":"interview/java/basic/emphasis/hashmap.md","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">参考</p>\\n<p><a href=\\"https://juejin.cn/post/6844904013909983245\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://juejin.cn/post/6844904013909983245</a></p>\\n</div>\\n<h2> 类层次结构</h2>\\n<p></p>\\n<p>不管是1.7，还是1.8，HashMap的实现框架都是哈希表 + 链表的组合方式。结构图如下：</p>","copyright":{"author":"lojzes","license":"MIT"},"autoDesc":true,"git":{}}');export{e as data};
