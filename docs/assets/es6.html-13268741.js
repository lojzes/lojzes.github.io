const e=JSON.parse(`{"key":"v-0b322ebd","path":"/study/web/js/es6.html","title":"es6","lang":"zh-CN","frontmatter":{"title":"es6","index":false,"icon":"discover","category":["学习笔记"],"description":"参考 源码 let 和 const // var 是变量提升：自动向外定义 // console.log(a); // var a = 10; // let 不能重复定义 // let.1 提示在变量实例化之前不能使用 // console.log(b); // let b = 10; // let.2 块级变量 // if(1===1){ // let c = 0; // } // // 报 c is not defined // console.log(c); // 经常用在for 循环上 // for(let i = 0;i &lt; 10 ; i ++){ // console.log(i); // } // let.3 不会污染全局变量 // let RegExp = 0 // console.log(RegExp); // console.log(window.RegExp); // const 拥有let 的特性，并且经常用于定义变量，一旦定义，就不能修改 // const person = { // name:'lojzes' // } // person.name = 'lyy' // console.log(person.name ); // 但是不能 // Uncaught TypeError: Assignment to constant variable. // person = { // age:20 // } // 可以这样 // person.age = 30 // console.log(person.age); // console.log(person); // 建议，一般使用 const,如果涉及修改变量，则使用let","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/study/web/js/es6.html"}],["meta",{"property":"og:site_name","content":"JavaNative"}],["meta",{"property":"og:title","content":"es6"}],["meta",{"property":"og:description","content":"参考 源码 let 和 const // var 是变量提升：自动向外定义 // console.log(a); // var a = 10; // let 不能重复定义 // let.1 提示在变量实例化之前不能使用 // console.log(b); // let b = 10; // let.2 块级变量 // if(1===1){ // let c = 0; // } // // 报 c is not defined // console.log(c); // 经常用在for 循环上 // for(let i = 0;i &lt; 10 ; i ++){ // console.log(i); // } // let.3 不会污染全局变量 // let RegExp = 0 // console.log(RegExp); // console.log(window.RegExp); // const 拥有let 的特性，并且经常用于定义变量，一旦定义，就不能修改 // const person = { // name:'lojzes' // } // person.name = 'lyy' // console.log(person.name ); // 但是不能 // Uncaught TypeError: Assignment to constant variable. // person = { // age:20 // } // 可以这样 // person.age = 30 // console.log(person.age); // console.log(person); // 建议，一般使用 const,如果涉及修改变量，则使用let"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"lojzes"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"es6\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lojzes\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"let 和 const","slug":"let-和-const","link":"#let-和-const","children":[]},{"level":2,"title":"模板字符串","slug":"模板字符串","link":"#模板字符串","children":[]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[]},{"level":2,"title":"解构","slug":"解构","link":"#解构","children":[]},{"level":2,"title":"定义对象简写","slug":"定义对象简写","link":"#定义对象简写","children":[]},{"level":2,"title":"扩展对象","slug":"扩展对象","link":"#扩展对象","children":[]},{"level":2,"title":"对象方法","slug":"对象方法","link":"#对象方法","children":[]},{"level":2,"title":"Symbol 函数","slug":"symbol-函数","link":"#symbol-函数","children":[]},{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[{"level":3,"title":"set","slug":"set","link":"#set","children":[]},{"level":3,"title":"map","slug":"map","link":"#map","children":[]},{"level":3,"title":"数组","slug":"数组","link":"#数组","children":[]}]},{"level":2,"title":"Promise","slug":"promise","link":"#promise","children":[]},{"level":2,"title":"async","slug":"async","link":"#async","children":[]},{"level":2,"title":"class","slug":"class","link":"#class","children":[]},{"level":2,"title":"继承","slug":"继承","link":"#继承","children":[{"level":3,"title":"模块化","slug":"模块化","link":"#模块化","children":[]}]}],"readingTime":{"minutes":6.3,"words":1889},"filePathRelative":"study/web/js/es6.md","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">参考</p>\\n<p><a href=\\"https://github.com/lojzes/web-study/tree/main/js/es6\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"> 源码 </a></p>\\n</div>\\n<h2> let 和 const</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">//   var 是变量提升：自动向外定义</span>\\n <span class=\\"token comment\\">//  console.log(a);</span>\\n <span class=\\"token comment\\">//  var a = 10;</span>\\n\\n <span class=\\"token comment\\">// let 不能重复定义</span>\\n\\n <span class=\\"token comment\\">// let.1 提示在变量实例化之前不能使用</span>\\n <span class=\\"token comment\\">// console.log(b);</span>\\n <span class=\\"token comment\\">// let b = 10;</span>\\n\\n <span class=\\"token comment\\">// let.2 块级变量</span>\\n\\n <span class=\\"token comment\\">// if(1===1){</span>\\n <span class=\\"token comment\\">// let c = 0;</span>\\n <span class=\\"token comment\\">// }</span>\\n\\n <span class=\\"token comment\\">// // 报 c is not defined</span>\\n <span class=\\"token comment\\">// console.log(c);</span>\\n\\n <span class=\\"token comment\\">// 经常用在for 循环上</span>\\n\\n <span class=\\"token comment\\">//  for(let i = 0;i &lt; 10 ; i ++){</span>\\n <span class=\\"token comment\\">//   console.log(i);</span>\\n <span class=\\"token comment\\">//  }</span>\\n\\n <span class=\\"token comment\\">// let.3 不会污染全局变量</span>\\n <span class=\\"token comment\\">//  let RegExp = 0</span>\\n <span class=\\"token comment\\">//  console.log(RegExp);</span>\\n\\n <span class=\\"token comment\\">//  console.log(window.RegExp);</span>\\n\\n <span class=\\"token comment\\">// const 拥有let 的特性，并且经常用于定义变量，一旦定义，就不能修改</span>\\n\\n <span class=\\"token comment\\">// const person = {</span>\\n <span class=\\"token comment\\">//   name:'lojzes'</span>\\n <span class=\\"token comment\\">// }</span>\\n\\n <span class=\\"token comment\\">// person.name = 'lyy'</span>\\n <span class=\\"token comment\\">// console.log(person.name );</span>\\n <span class=\\"token comment\\">// 但是不能</span>\\n\\n <span class=\\"token comment\\">// Uncaught TypeError: Assignment to constant variable.</span>\\n <span class=\\"token comment\\">// person = {</span>\\n <span class=\\"token comment\\">//   age:20</span>\\n <span class=\\"token comment\\">// }</span>\\n\\n <span class=\\"token comment\\">// 可以这样</span>\\n <span class=\\"token comment\\">// person.age = 30</span>\\n\\n <span class=\\"token comment\\">// console.log(person.age);</span>\\n <span class=\\"token comment\\">// console.log(person);</span>\\n\\n <span class=\\"token comment\\">// 建议，一般使用 const,如果涉及修改变量，则使用let</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"lojzes","license":"MIT"},"autoDesc":true,"git":{}}`);export{e as data};
