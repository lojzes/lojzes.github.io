import{_ as o,X as s,Y as a,Z as e,a1 as t,$ as c,C as l}from"./framework-0b23a550.js";const i="/assets/1-ab67cccf.webp",r={},_={class:"hint-container tip"},d=e("p",{class:"hint-container-title"},"参考",-1),p={href:"https://juejin.cn/post/6844904197859590151",target:"_blank",rel:"noopener noreferrer"},h=e("h2",{id:"何谓云原生",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#何谓云原生","aria-hidden":"true"},"#"),t(" 何谓云原生？")],-1),u=e("p",null,[t("技术的变革，一定是思想先行，云原生是一种构建和运行应用程序的方法，是一套技术体系和方法论。云原生（CloudNative）是一个组合词，Cloud+Native。Cloud表示应用程序位于云中，而不是传统的数据中心；Native表示应用程序从设计之初即考虑到云的环境，原生为云而设计，在云上以最佳姿势运行，充分利用和发挥云平台的弹性+分布式优势。Pivotal公司的Matt Stine于2013年首次提出云原生（CloudNative）的概念；2015年，云原生刚推广时，Matt Stine在《迁移到云原生架构》一书中定义了符合云原生架构的几个特征：12因素、微服务、自敏捷架构、基于API协作、扛脆弱性；到了2017年，Matt Stine在接受InfoQ采访时又改了口风，将云原生架构归纳为模块化、可观察、可部署、可测试、可替换、可处理6特质；而Pivotal最新官网对云原生概括为4个要点："),e("code",null,"DevOps+持续交付+微服务+容器"),t("。")],-1),v=e("p",null,[e("img",{src:i,alt:"",loading:"lazy"})],-1),f=e("p",null,[t("2015年云原生计算基金会（CNCF）成立，CNCF掺和进来后，最初把云原生定义为包括："),e("code",null,"容器化封装+自动化管理+面向微服务"),t("；到了2018年，CNCF又更新了云原生的定义，把服务网格(Service Mesh)和声明式API给加了进来。可见，不同的人和组织对云原生有不同的定义，相同的人和组织在不同时间点对云原生也有不同的定义，真是乱的一匹，搞得鄙人非常晕菜，我的应对很简单，选一个我最容易记住和理解的定义："),e("code",null,"DevOps+持续交付+微服务+容器"),t("。总而言之，符合云原生架构的应用程序应该是：采用开源堆栈（K8S+Docker）进行容器化，基于微服务架构提高灵活性和可维护性，借助敏捷方法、DevOps支持持续迭代和运维自动化，利用云平台设施实现弹性伸缩、动态调度、优化资源利用率。云原生构建应用简便快捷，部署应用轻松自如、运行应用按需伸缩。优点不一而足，缺点微乎其微；秒杀传统Web框架，吊打祖传IT模式，实在是保命**、评优晋级不可多得的终极绝密武器。")],-1);function C(m,N){const n=l("ExternalLinkIcon");return s(),a("div",null,[e("div",_,[d,e("p",null,[e("a",p,[t("https://juejin.cn/post/6844904197859590151"),c(n)])])]),h,u,v,f])}const k=o(r,[["render",C],["__file","cloudnative.html.vue"]]);export{k as default};
