const e=JSON.parse('{"key":"v-2cab298e","path":"/interview/db/mysql/emphasis/mysql-index.html","title":"MySQL索引详解","lang":"zh-CN","frontmatter":{"title":"MySQL索引详解","index":false,"icon":"discover","category":["面试"],"tag":["mysql"],"description":"索引介绍 索引是一种用于快速查询和检索数据的数据结构，其本质可以看成是一种排序好的数据结构。 索引的作用就相当于书的目录。打个比方: 我们在查字典的时候，如果没有目录，那我们就只能一页一页的去找我们需要查的那个字，速度很慢。如果有目录了，我们只需要先去目录里查找字的位置，然后直接翻到那一页就行了。 索引底层数据结构存在很多种类型，常见的索引结构有: B 树， B+树 和 Hash、红黑树。在 MySQL 中，无论是 Innodb 还是 MyIsam，都使用了 B+树作为索引结构。 索引的优缺点","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/interview/db/mysql/emphasis/mysql-index.html"}],["meta",{"property":"og:site_name","content":"JavaNative"}],["meta",{"property":"og:title","content":"MySQL索引详解"}],["meta",{"property":"og:description","content":"索引介绍 索引是一种用于快速查询和检索数据的数据结构，其本质可以看成是一种排序好的数据结构。 索引的作用就相当于书的目录。打个比方: 我们在查字典的时候，如果没有目录，那我们就只能一页一页的去找我们需要查的那个字，速度很慢。如果有目录了，我们只需要先去目录里查找字的位置，然后直接翻到那一页就行了。 索引底层数据结构存在很多种类型，常见的索引结构有: B 树， B+树 和 Hash、红黑树。在 MySQL 中，无论是 Innodb 还是 MyIsam，都使用了 B+树作为索引结构。 索引的优缺点"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"MySQL索引详解"}],["meta",{"property":"article:author","content":"lojzes"}],["meta",{"property":"article:tag","content":"mysql"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL索引详解\\",\\"image\\":[\\"https://vuepress-theme-hope-docs-demo.netlify.app/\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lojzes\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"索引介绍","slug":"索引介绍","link":"#索引介绍","children":[]},{"level":2,"title":"索引的优缺点","slug":"索引的优缺点","link":"#索引的优缺点","children":[]},{"level":2,"title":"索引的底层数据结构","slug":"索引的底层数据结构","link":"#索引的底层数据结构","children":[{"level":3,"title":"Hash 表","slug":"hash-表","link":"#hash-表","children":[]},{"level":3,"title":"B 树& B+树","slug":"b-树-b-树","link":"#b-树-b-树","children":[]}]},{"level":2,"title":"索引类型总结","slug":"索引类型总结","link":"#索引类型总结","children":[]},{"level":2,"title":"主键索引(Primary Key)","slug":"主键索引-primary-key","link":"#主键索引-primary-key","children":[]},{"level":2,"title":"二级索引","slug":"二级索引","link":"#二级索引","children":[]},{"level":2,"title":"聚簇索引与非聚簇索引","slug":"聚簇索引与非聚簇索引","link":"#聚簇索引与非聚簇索引","children":[{"level":3,"title":"聚簇索引（聚集索引）","slug":"聚簇索引-聚集索引","link":"#聚簇索引-聚集索引","children":[]},{"level":3,"title":"非聚簇索引（非聚集索引）","slug":"非聚簇索引-非聚集索引","link":"#非聚簇索引-非聚集索引","children":[]}]},{"level":2,"title":"覆盖索引和联合索引","slug":"覆盖索引和联合索引","link":"#覆盖索引和联合索引","children":[{"level":3,"title":"覆盖索引","slug":"覆盖索引","link":"#覆盖索引","children":[]},{"level":3,"title":"联合索引","slug":"联合索引","link":"#联合索引","children":[]},{"level":3,"title":"最左前缀匹配原则","slug":"最左前缀匹配原则","link":"#最左前缀匹配原则","children":[]}]},{"level":2,"title":"索引下推","slug":"索引下推","link":"#索引下推","children":[]},{"level":2,"title":"正确使用索引的一些建议","slug":"正确使用索引的一些建议","link":"#正确使用索引的一些建议","children":[{"level":3,"title":"选择合适的字段创建索引","slug":"选择合适的字段创建索引","link":"#选择合适的字段创建索引","children":[]},{"level":3,"title":"被频繁更新的字段应该慎重建立索引","slug":"被频繁更新的字段应该慎重建立索引","link":"#被频繁更新的字段应该慎重建立索引","children":[]},{"level":3,"title":"限制每张表上的索引数量","slug":"限制每张表上的索引数量","link":"#限制每张表上的索引数量","children":[]},{"level":3,"title":"尽可能的考虑建立联合索引而不是单列索引","slug":"尽可能的考虑建立联合索引而不是单列索引","link":"#尽可能的考虑建立联合索引而不是单列索引","children":[]},{"level":3,"title":"注意避免冗余索引","slug":"注意避免冗余索引","link":"#注意避免冗余索引","children":[]},{"level":3,"title":"字符串类型的字段使用前缀索引代替普通索引","slug":"字符串类型的字段使用前缀索引代替普通索引","link":"#字符串类型的字段使用前缀索引代替普通索引","children":[]},{"level":3,"title":"避免索引失效","slug":"避免索引失效","link":"#避免索引失效","children":[]},{"level":3,"title":"删除长期未使用的索引","slug":"删除长期未使用的索引","link":"#删除长期未使用的索引","children":[]},{"level":3,"title":"知道如何分析语句是否走索引查询","slug":"知道如何分析语句是否走索引查询","link":"#知道如何分析语句是否走索引查询","children":[]}]}],"readingTime":{"minutes":20.46,"words":6139},"filePathRelative":"interview/db/mysql/emphasis/mysql-index.md","excerpt":"<h2> 索引介绍</h2>\\n<p><strong>索引是一种用于快速查询和检索数据的数据结构，其本质可以看成是一种排序好的数据结构。</strong></p>\\n<p>索引的作用就相当于书的目录。打个比方: 我们在查字典的时候，如果没有目录，那我们就只能一页一页的去找我们需要查的那个字，速度很慢。如果有目录了，我们只需要先去目录里查找字的位置，然后直接翻到那一页就行了。</p>\\n<p>索引底层数据结构存在很多种类型，常见的索引结构有: B 树， B+树 和 Hash、红黑树。在 MySQL 中，无论是 Innodb 还是 MyIsam，都使用了 B+树作为索引结构。</p>\\n<h2> 索引的优缺点</h2>","copyright":{"author":"lojzes","license":"MIT"},"autoDesc":true,"git":{}}');export{e as data};
