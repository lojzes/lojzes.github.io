const e=JSON.parse('{"key":"v-57d2ef21","path":"/interview/framework/spring/aop.html","title":"Aop","lang":"zh-CN","frontmatter":{"title":"Aop","index":false,"icon":"discover","category":["面试"],"description":"参考 参考 https://www.cnblogs.com/lifullmoon/p/14654795.html 什么是 AOP？ AOP（Aspect-oriented Programming）面向切面编程，是一种开发理念，是 OOP 面向对象编程的补充。我们知道，Java 就是一门面向对象编程的语言，在 OOP 中最小的单元就是“Class 对象”，但是在 AOP 中最小的单元是“切面”。一个“切面”可以包含很多种类型和对象，对它们进行模块化管理，例如事务管理","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/interview/framework/spring/aop.html"}],["meta",{"property":"og:site_name","content":"JavaNative"}],["meta",{"property":"og:title","content":"Aop"}],["meta",{"property":"og:description","content":"参考 参考 https://www.cnblogs.com/lifullmoon/p/14654795.html 什么是 AOP？ AOP（Aspect-oriented Programming）面向切面编程，是一种开发理念，是 OOP 面向对象编程的补充。我们知道，Java 就是一门面向对象编程的语言，在 OOP 中最小的单元就是“Class 对象”，但是在 AOP 中最小的单元是“切面”。一个“切面”可以包含很多种类型和对象，对它们进行模块化管理，例如事务管理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"lojzes"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Aop\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lojzes\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"什么是 AOP？","slug":"什么是-aop","link":"#什么是-aop","children":[]},{"level":2,"title":"为什么要引入 AOP？","slug":"为什么要引入-aop","link":"#为什么要引入-aop","children":[]},{"level":2,"title":"简述 AOP 的使用场景？","slug":"简述-aop-的使用场景","link":"#简述-aop-的使用场景","children":[]},{"level":2,"title":"在 AOP 中有以下几个概念：","slug":"在-aop-中有以下几个概念","link":"#在-aop-中有以下几个概念","children":[]},{"level":2,"title":"AOP 框架","slug":"aop-框架","link":"#aop-框架","children":[]},{"level":2,"title":"AOP 代理","slug":"aop-代理","link":"#aop-代理","children":[]},{"level":2,"title":"JDK 动态代理？","slug":"jdk-动态代理","link":"#jdk-动态代理","children":[]},{"level":2,"title":"CGLIB 动态代理？","slug":"cglib-动态代理","link":"#cglib-动态代理","children":[]},{"level":2,"title":"JDK 动态代理和 CGLIB 动态代理有什么不同？","slug":"jdk-动态代理和-cglib-动态代理有什么不同","link":"#jdk-动态代理和-cglib-动态代理有什么不同","children":[]},{"level":2,"title":"Spring AOP 和 AspectJ 有什么关联","slug":"spring-aop-和-aspectj-有什么关联","link":"#spring-aop-和-aspectj-有什么关联","children":[]},{"level":2,"title":"Spring AOP 中有哪些 Advice 类型？","slug":"spring-aop-中有哪些-advice-类型","link":"#spring-aop-中有哪些-advice-类型","children":[]},{"level":2,"title":"Spring AOP 中 Advisor 接口是什么？","slug":"spring-aop-中-advisor-接口是什么","link":"#spring-aop-中-advisor-接口是什么","children":[]},{"level":2,"title":"简述 Spring AOP 自动代理的实现","slug":"简述-spring-aop-自动代理的实现","link":"#简述-spring-aop-自动代理的实现","children":[]},{"level":2,"title":"Spring @EnableAspectJAutoProxy 的原理？","slug":"spring-enableaspectjautoproxy-的原理","link":"#spring-enableaspectjautoproxy-的原理","children":[]}],"readingTime":{"minutes":10.96,"words":3287},"filePathRelative":"interview/framework/spring/aop.md","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">参考</p>\\n<p>参考 <a href=\\"https://www.cnblogs.com/lifullmoon/p/14654795.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.cnblogs.com/lifullmoon/p/14654795.html</a></p>\\n</div>\\n<h2> 什么是 AOP？</h2>\\n<p>AOP（Aspect-oriented Programming）面向切面编程，是一种开发理念，是 OOP 面向对象编程的补充。我们知道，Java 就是一门面向对象编程的语言，在 OOP 中最小的单元就是“Class 对象”，但是在 AOP 中最小的单元是“切面”。一个“切面”可以包含很多种类型和对象，对它们进行模块化管理，例如事务管理</p>","copyright":{"author":"lojzes","license":"MIT"},"autoDesc":true,"git":{}}');export{e as data};
