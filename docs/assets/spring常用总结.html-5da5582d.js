import{_ as t,X as o,Y as p,Z as n,a1 as s,$ as e,a2 as l,C as c}from"./framework-0b23a550.js";const r={},i={class:"hint-container tip"},u=n("p",{class:"hint-container-title"},"参考",-1),d={href:"https://github.com/lojzes/spring-family",target:"_blank",rel:"noopener noreferrer"},k=l(`<h2 id="spring" tabindex="-1"><a class="header-anchor" href="#spring" aria-hidden="true">#</a> spring</h2><h2 id="webmvc" tabindex="-1"><a class="header-anchor" href="#webmvc" aria-hidden="true">#</a> webmvc</h2><h3 id="handlerinterceptor" tabindex="-1"><a class="header-anchor" href="#handlerinterceptor" aria-hidden="true">#</a> HandlerInterceptor</h3><p><code>org.springframework.web.servlet.HandlerInterceptor</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>
  <span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ModelAndView</span> modelAndView<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="handlermethodargumentresolver" tabindex="-1"><a class="header-anchor" href="#handlermethodargumentresolver" aria-hidden="true">#</a> HandlerMethodArgumentResolver</h3><p><code>org.springframework.web.method.support.HandlerMethodArgumentResolver</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">HandlerMethodArgumentResolver</span> <span class="token punctuation">{</span>
 
	<span class="token keyword">boolean</span> <span class="token function">supportsParameter</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token annotation punctuation">@Nullable</span>
	<span class="token class-name">Object</span> <span class="token function">resolveArgument</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ModelAndViewContainer</span> mavContainer<span class="token punctuation">,</span>
			<span class="token class-name">NativeWebRequest</span> webRequest<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">WebDataBinderFactory</span> binderFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例总结" tabindex="-1"><a class="header-anchor" href="#案例总结" aria-hidden="true">#</a> 案例总结：</h3><p>1、</p><p>可以实现 统一获取当前用户信息的公共方法， 在 controller 中添加相应的自定义注解和用户信息DTO，在 handler 中在 header 中获取</p><p>用户唯一标识，进行用户信息转换，放入request 中，在 HandlerMethodArgumentResolver 中 把用户新转换为用户dto</p>`,12),m={href:"https://github.com/lojzes/spring-family/blob/master/spring-boot/src/main/java/com/lojzes/spring/famliy/springboot/resolve/CurrentUserMethodArgumentResolver.java",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"2、对请求的参数进行非法字符进行校验，如数据库相关敏感字符校验",-1),h={href:"https://github.com/lojzes/workmanagement/blob/master/wanhuayun-common/wanhuayun-common-data/src/main/java/com/wanhuayun/framework/common/data/resolver/SqlFilterArgumentResolver.java",target:"_blank",rel:"noopener noreferrer"};function b(g,w){const a=c("ExternalLinkIcon");return o(),p("div",null,[n("div",i,[u,n("p",null,[n("a",d,[s("源码"),e(a)])])]),k,n("p",null,[n("a",m,[s("CurrentUserMethodArgumentResolver"),e(a)])]),v,n("p",null,[n("a",h,[s("SqlFilterArgumentResolver"),e(a)])])])}const _=t(r,[["render",b],["__file","spring常用总结.html.vue"]]);export{_ as default};
