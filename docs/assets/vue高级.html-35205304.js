const n=JSON.parse('{"key":"v-42263882","path":"/study/web/vue/vue%E9%AB%98%E7%BA%A7.html","title":"vue高级","lang":"zh-CN","frontmatter":{"title":"vue高级","index":false,"icon":"discover","category":["学习笔记"],"description":"mixin 混入 // 1.混入的data , methods 优先级 没有data ,methods 优先级高 // 2.生命周期函数也可以混入，混入的生命周期函数先执行 // 3 mixin 的作用域，相当于局部变量，在哪使用，就在哪定义 `mixins` 引用 // 定义混入 const mixin ={ data() { return { item : 100 } }, } var app = Vue.createApp({ data() { return { // item: 10 } }, mixins:[mixin], template: ` &lt;div&gt;{{item}}&lt;/div&gt; `, }) var app = Vue.createApp({ data() { return { // item: 10 } }, template: ` &lt;div&gt;{{item}}&lt;/div&gt; `, }) // 定义全局混入，默认会注入到每个组件内，不需要再 使用 `mixins[]` 引用，即可使用 app.mixin({ data() { return { item: 100 } } }) app.component(\'child\',{ template:` &lt;div&gt;{{item}}&lt;/div&gt; ` }) // 自定义属性 // 优先级同上 var app = Vue.createApp({ // 自定义属性：不在data ,及任何地方 item: 200, template: ` &lt;div&gt;{{this.$options.item}}&lt;/div&gt; `, }) // app.mixin({ item: 100 }) var app = Vue.createApp({ // 自定义属性：不在data ,及任何地方 item: 200, template: ` &lt;div&gt;{{this.$options.item}}&lt;/div&gt; `, }) // app.mixin({ item: 100 }) // 改变默认混入的优先级 // parent 混入的值 child 原来app的值 // 调整优先级，先返回 mixin 数据 app.config.optionMergeStrategies.item = (parent, child, vm) =&gt; { return parent || child }","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/study/web/vue/vue%E9%AB%98%E7%BA%A7.html"}],["meta",{"property":"og:site_name","content":"JavaNative"}],["meta",{"property":"og:title","content":"vue高级"}],["meta",{"property":"og:description","content":"mixin 混入 // 1.混入的data , methods 优先级 没有data ,methods 优先级高 // 2.生命周期函数也可以混入，混入的生命周期函数先执行 // 3 mixin 的作用域，相当于局部变量，在哪使用，就在哪定义 `mixins` 引用 // 定义混入 const mixin ={ data() { return { item : 100 } }, } var app = Vue.createApp({ data() { return { // item: 10 } }, mixins:[mixin], template: ` &lt;div&gt;{{item}}&lt;/div&gt; `, }) var app = Vue.createApp({ data() { return { // item: 10 } }, template: ` &lt;div&gt;{{item}}&lt;/div&gt; `, }) // 定义全局混入，默认会注入到每个组件内，不需要再 使用 `mixins[]` 引用，即可使用 app.mixin({ data() { return { item: 100 } } }) app.component(\'child\',{ template:` &lt;div&gt;{{item}}&lt;/div&gt; ` }) // 自定义属性 // 优先级同上 var app = Vue.createApp({ // 自定义属性：不在data ,及任何地方 item: 200, template: ` &lt;div&gt;{{this.$options.item}}&lt;/div&gt; `, }) // app.mixin({ item: 100 }) var app = Vue.createApp({ // 自定义属性：不在data ,及任何地方 item: 200, template: ` &lt;div&gt;{{this.$options.item}}&lt;/div&gt; `, }) // app.mixin({ item: 100 }) // 改变默认混入的优先级 // parent 混入的值 child 原来app的值 // 调整优先级，先返回 mixin 数据 app.config.optionMergeStrategies.item = (parent, child, vm) =&gt; { return parent || child }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"lojzes"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue高级\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lojzes\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"mixin 混入","slug":"mixin-混入","link":"#mixin-混入","children":[]},{"level":2,"title":"自定义指令","slug":"自定义指令","link":"#自定义指令","children":[]},{"level":2,"title":"传送门 teleport","slug":"传送门-teleport","link":"#传送门-teleport","children":[]},{"level":2,"title":"render 函数","slug":"render-函数","link":"#render-函数","children":[]},{"level":2,"title":"插件","slug":"插件","link":"#插件","children":[]},{"level":2,"title":"使用mixin 和 插件实现 参数校验","slug":"使用mixin-和-插件实现-参数校验","link":"#使用mixin-和-插件实现-参数校验","children":[]}],"readingTime":{"minutes":3.58,"words":1073},"filePathRelative":"study/web/vue/vue高级.md","excerpt":"<h2> mixin 混入</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 1.混入的data , methods 优先级 没有data ,methods 优先级高</span>\\n<span class=\\"token comment\\">// 2.生命周期函数也可以混入，混入的生命周期函数先执行</span>\\n<span class=\\"token comment\\">// 3 mixin 的作用域，相当于局部变量，在哪使用，就在哪定义    `mixins` 引用 </span>\\n\\n\\n<span class=\\"token comment\\">// 定义混入</span>\\n  <span class=\\"token keyword\\">const</span> mixin <span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span>\\n\\n  <span class=\\"token function\\">data</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token literal-property property\\">item</span> <span class=\\"token operator\\">:</span> <span class=\\"token number\\">100</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">var</span> app <span class=\\"token operator\\">=</span> Vue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createApp</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">data</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n       <span class=\\"token comment\\">// item: 10</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">mixins</span><span class=\\"token operator\\">:</span><span class=\\"token punctuation\\">[</span>mixin<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">template</span><span class=\\"token operator\\">:</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">\\n          &lt;div&gt;{{item}}&lt;/div&gt;\\n      </span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n<span class=\\"token keyword\\">var</span> app <span class=\\"token operator\\">=</span> Vue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createApp</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">data</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// item: 10</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">template</span><span class=\\"token operator\\">:</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">\\n          &lt;div&gt;{{item}}&lt;/div&gt;\\n      </span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n <span class=\\"token comment\\">// 定义全局混入，默认会注入到每个组件内，不需要再 使用 `mixins[]` 引用，即可使用</span>\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mixin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">data</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">item</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">100</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n  app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">component</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\'child\'</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">template</span><span class=\\"token operator\\">:</span><span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">\\n      &lt;div&gt;{{item}}&lt;/div&gt;\\n    </span><span class=\\"token template-punctuation string\\">`</span></span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token comment\\">// 自定义属性</span>\\n  <span class=\\"token comment\\">// 优先级同上</span>\\n  <span class=\\"token keyword\\">var</span> app <span class=\\"token operator\\">=</span> Vue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createApp</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 自定义属性：不在data ,及任何地方</span>\\n    <span class=\\"token literal-property property\\">item</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">template</span><span class=\\"token operator\\">:</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">\\n          &lt;div&gt;{{this.$options.item}}&lt;/div&gt;\\n      </span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token comment\\">// </span>\\n  app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mixin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">item</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">100</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n\\n  <span class=\\"token keyword\\">var</span> app <span class=\\"token operator\\">=</span> Vue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createApp</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 自定义属性：不在data ,及任何地方</span>\\n    <span class=\\"token literal-property property\\">item</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">template</span><span class=\\"token operator\\">:</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">\\n          &lt;div&gt;{{this.$options.item}}&lt;/div&gt;\\n      </span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token comment\\">// </span>\\n  app<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mixin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">item</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">100</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n   <span class=\\"token comment\\">// 改变默认混入的优先级</span>\\n   <span class=\\"token comment\\">// parent 混入的值  child 原来app的值</span>\\n   <span class=\\"token comment\\">// 调整优先级，先返回 mixin 数据</span>\\n app<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">.</span>optionMergeStrategies<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">item</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">parent<span class=\\"token punctuation\\">,</span> child<span class=\\"token punctuation\\">,</span> vm</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> parent <span class=\\"token operator\\">||</span> child\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"lojzes","license":"MIT"},"autoDesc":true,"git":{}}');export{n as data};
