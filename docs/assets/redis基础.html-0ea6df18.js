const e=JSON.parse('{"key":"v-32b95130","path":"/interview/middleware/redis/redis%E5%9F%BA%E7%A1%80.html","title":"redis基础","lang":"zh-CN","frontmatter":{"title":"redis基础","index":false,"icon":"discover","category":["面试"],"description":"参考 \\"Redis 常见面试题\\" \\"Redis为什么是单线程？高并发响应快？\\" Redis内存淘汰策略——LFU(Least Frequently Used)","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/interview/middleware/redis/redis%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"JavaNative"}],["meta",{"property":"og:title","content":"redis基础"}],["meta",{"property":"og:description","content":"参考 \\"Redis 常见面试题\\" \\"Redis为什么是单线程？高并发响应快？\\" Redis内存淘汰策略——LFU(Least Frequently Used)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"lojzes"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"redis基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lojzes\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"Redis 和 Memcached 有什么区别？","slug":"redis-和-memcached-有什么区别","link":"#redis-和-memcached-有什么区别","children":[]},{"level":2,"title":"为什么用 Redis 作为 MySQL 的缓存？","slug":"为什么用-redis-作为-mysql-的缓存","link":"#为什么用-redis-作为-mysql-的缓存","children":[{"level":3,"title":"Redis 具备高性能","slug":"redis-具备高性能","link":"#redis-具备高性能","children":[]},{"level":3,"title":"Redis 具备高并发","slug":"redis-具备高并发","link":"#redis-具备高并发","children":[]}]},{"level":2,"title":"Redis 数据结构","slug":"redis-数据结构","link":"#redis-数据结构","children":[]},{"level":2,"title":"五种常见的 Redis 数据类型是怎么实现？","slug":"五种常见的-redis-数据类型是怎么实现","link":"#五种常见的-redis-数据类型是怎么实现","children":[{"level":3,"title":"string","slug":"string","link":"#string","children":[]},{"level":3,"title":"list","slug":"list","link":"#list","children":[]},{"level":3,"title":"hash","slug":"hash","link":"#hash","children":[]},{"level":3,"title":"set","slug":"set","link":"#set","children":[]},{"level":3,"title":"zset","slug":"zset","link":"#zset","children":[]}]},{"level":2,"title":"Redis 线程模型","slug":"redis-线程模型","link":"#redis-线程模型","children":[{"level":3,"title":"Redis 是单线程吗？","slug":"redis-是单线程吗","link":"#redis-是单线程吗","children":[]},{"level":3,"title":"Redis 单线程模式是怎样的？","slug":"redis-单线程模式是怎样的","link":"#redis-单线程模式是怎样的","children":[]},{"level":3,"title":"IO多路复用技术（多路网络连接复用一个IO线程, 时分复用）","slug":"io多路复用技术-多路网络连接复用一个io线程-时分复用","link":"#io多路复用技术-多路网络连接复用一个io线程-时分复用","children":[]}]},{"level":2,"title":"Redis的回收策略","slug":"redis的回收策略","link":"#redis的回收策略","children":[]},{"level":2,"title":"Redis 持久化","slug":"redis-持久化","link":"#redis-持久化","children":[{"level":3,"title":"AOF","slug":"aof","link":"#aof","children":[]}]},{"level":2,"title":"redis 集群","slug":"redis-集群","link":"#redis-集群","children":[{"level":3,"title":"主从复制","slug":"主从复制","link":"#主从复制","children":[]},{"level":3,"title":"哨兵模式","slug":"哨兵模式","link":"#哨兵模式","children":[]},{"level":3,"title":"切片集群模式","slug":"切片集群模式","link":"#切片集群模式","children":[]},{"level":3,"title":"集群脑裂导致数据丢失怎么办？","slug":"集群脑裂导致数据丢失怎么办","link":"#集群脑裂导致数据丢失怎么办","children":[]}]}],"readingTime":{"minutes":22.77,"words":6830},"filePathRelative":"interview/middleware/redis/redis基础.md","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">参考</p>\\n<p><a href=\\"https://xiaolincoding.com/redis/base/redis_interview.html#%E8%AE%A4%E8%AF%86-redis\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">\\"Redis 常见面试题\\"</a></p>\\n<p><a href=\\"https://cloud.tencent.com/developer/article/1805388\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">\\"Redis为什么是单线程？高并发响应快？\\"</a></p>\\n<p><a href=\\"https://bbs.huaweicloud.com/blogs/303873\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Redis内存淘汰策略——LFU(Least Frequently Used)</a></p>\\n</div>","copyright":{"author":"lojzes","license":"MIT"},"autoDesc":true,"git":{}}');export{e as data};
